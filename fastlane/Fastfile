# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
fastlane_require 'fileutils'
fastlane_require 'shellwords'

fastlane_version "1.30.0"
default_platform :ios

# path relative to Fastfile
output_directory = File.expand_path('./Deployment')

def set_bundle_version_from_commit_count
  bundle_version = Actions.lane_context[SharedValues::VERSION_NUMBER] + ".10" + number_of_commits.to_s
  puts "Setting build number (CFBundleVersion) to '" + bundle_version + "'..."
  set_info_plist_value(
    path: "./ios/Exponent/Supporting/Info.plist",
    key: "CFBundleVersion",
    value: bundle_version
  )
end

def clear_bundle_version
  puts "removing CFBundleVersion..."
  update_plist(
    plist_path: "./ios/Exponent/Supporting/Info.plist",
    block: proc do |plist|
      plist.delete("CFBundleVersion")
    end
  )
end

platform :ios do

  before_all do
    FileUtils.mkdir_p(output_directory)
    Actions.lane_context[SharedValues::VERSION_NUMBER] = get_version_number(
      xcodeproj: "./ios/Exponent.xcodeproj"
    )
    set_bundle_version_from_commit_count
  end

  lane :test do
    scan(
      workspace: "ios/Exponent.xcworkspace",
      scheme: "Exponent",
      devices: ["iPhone SE", "iPhone X"],
      clean: false,
    )
  end

  lane :create_simulator_build do
    directory = prompt(text: "Please enter the path where we should output the sim build, relative to ./ios (i.e. ../my-simulator-build):")
    puts "Build will be written to: " + File.expand_path(directory)
    commands = [
      "cd ../ios",
      "xcodebuild -workspace Exponent.xcworkspace -scheme Exponent -sdk iphonesimulator -configuration Release -derivedDataPath #{directory} ARCHS=\"i386 x86_64\" ONLY_ACTIVE_ARCH=NO | xcpretty"
    ]
    sh(commands.join(' && '))
  end

  lane :release do
    cert(
      team_id: "C8D8QTF339",
    )

    sigh(
      output_path: output_directory,
      filename: "Exponent-distribution.mobileprovision",
    )

    xcodebuild_args = {
      APP_PROVISIONING_PROFILE: Actions.lane_context[Actions::SharedValues::SIGH_UDID],
    }
    xcodebuild_args = xcodebuild_args.map do |k,v|
      "#{k.to_s.shellescape}=#{v.shellescape}"
    end.join ' '

    gym(
      workspace: "ios/Exponent.xcworkspace",
      scheme: "Exponent",
      configuration: "Release",
      xcargs: xcodebuild_args,
      clean: true,
      output_directory: output_directory,
      output_name: "Exponent.ipa",
    )

    deliver(
      submit_for_review: false
    )
  end

  after_all do |lane|
    # FileUtils.rm_rf(output_directory)
    clear_bundle_version
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end

end
